<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>小程序/4.0 注册小程序</title>
    <url>/2020/02/18/%E5%B0%8F%E7%A8%8B%E5%BA%8F/4.0%20%E6%B3%A8%E5%86%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="一-小程序的启动流程"><a href="#一-小程序的启动流程" class="headerlink" title="一.小程序的启动流程"></a>一.小程序的启动流程</h1><p>下载小程序包-&gt;启动小程序<br>-&gt;加载解析app.json-&gt;注册App()(即调用App方法)<br>-&gt;执行App生命周期函数<br>  加载自定义组件代码，注册自定义组件<br>-&gt;加载解析page.json<br>  渲染层加载渲染page.wxml<br>  逻辑层注册Page()-&gt;执行Page生命周期</p>
<h2 id="1-生命周期函数"><a href="#1-生命周期函数" class="headerlink" title="1 生命周期函数"></a>1 生命周期函数</h2><p>能在后台存活俩小时<br>在app.js内</p>
<h3 id="1-1-onLanuch-小程序初始化完成时"><a href="#1-1-onLanuch-小程序初始化完成时" class="headerlink" title="1.1 onLanuch 小程序初始化完成时"></a>1.1 onLanuch 小程序初始化完成时</h3><p>只在初始化时执行一次<br>wx.getUserInfo能获取当前用户信息</p>
<h3 id="1-2-onShow-小程序界面显示时"><a href="#1-2-onShow-小程序界面显示时" class="headerlink" title="1.2 onShow 小程序界面显示时"></a>1.2 onShow 小程序界面显示时</h3><p>可以执行多次</p>
<h3 id="1-3-onHide-小程序被隐藏时"><a href="#1-3-onHide-小程序被隐藏时" class="headerlink" title="1.3 onHide 小程序被隐藏时"></a>1.3 onHide 小程序被隐藏时</h3><h3 id="1-4-onError-发生错误时"><a href="#1-4-onError-发生错误时" class="headerlink" title="1.4 onError 发生错误时"></a>1.4 onError 发生错误时</h3><h2 id="2-注册App时做什么？"><a href="#2-注册App时做什么？" class="headerlink" title="2 注册App时做什么？"></a>2 注册App时做什么？</h2><h3 id="2-1-判断小程序的进入场景"><a href="#2-1-判断小程序的进入场景" class="headerlink" title="2.1 判断小程序的进入场景"></a>2.1 判断小程序的进入场景</h3><p>常见:群聊会话中打开，小程序列表，微信扫一扫等等<br>确定场景的方法<br>在onLaunch和onShow生命周期回调函数中，会有options参数<br>其中的scene值可以判断场景</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">onShow: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(options.scene)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<h3 id="2-2-监听生命周期函数，在生命周期中执行对应的业务逻辑，"><a href="#2-2-监听生命周期函数，在生命周期中执行对应的业务逻辑，" class="headerlink" title="2.2 监听生命周期函数，在生命周期中执行对应的业务逻辑，"></a>2.2 监听生命周期函数，在生命周期中执行对应的业务逻辑，</h3><p>比如在某个生命周期函数中获取微信用户的信息</p>
<h3 id="2-3-保存全局变量"><a href="#2-3-保存全局变量" class="headerlink" title="2.3 保存全局变量"></a>2.3 保存全局变量</h3><p>因为App()实例只有一个，并且是全局共享的(单例对象),<br>所以我们可以将一些共享数据放在这里。</p>
]]></content>
  </entry>
  <entry>
    <title>随笔/活在当下</title>
    <url>/2020/02/18/%E9%9A%8F%E7%AC%94/%E6%B4%BB%E5%9C%A8%E5%BD%93%E4%B8%8B/</url>
    <content><![CDATA[<p>![timg (15)](timg (15).jpg)</p>
<p>活在当下<br>不等于只考虑眼前，<br>而是清楚的知道自己<br>正在做的事情<br>对未来有什么后果，<br>如此才能真正把握好<br>当下的每一分每一秒。</p>
<a id="more"></a>

<p>身心合一，<br>知道自己在做什么，<br>自己所做的与理想是一致的，<br>方为“活在当下”。<br>反过来，心里想了很多，<br>行为却没有跟上，<br>那就是妄想；<br>行为随顺烦恼习气，<br>内心没有宗旨目标，<br>浑浑噩噩，<br>不知为何而“活”，<br>也不知什么叫“当下”。</p>
<p>“当下”是有前因与有后果的，<br>它建立在我们今生的<br>生命经历之上，<br>也建立在过去的无数生、<br>无数劫的基础上，<br>所以“活在当下”并不是指<br>活在当下这一刻的感受中，<br>忘记过去、不顾未来，<br>只管眼前的受用。<br>“活在当下”的真正意义<br>是让我们珍惜<br>与善待此刻的时光，<br>不打妄想、保持正念。</p>
<p>有目标和方向，<br>才能真正活在当下。<br>不然，活在当下，<br>只是活在当下的<br>情绪与无明中。</p>
<p>身心合一，<br>不被妄念牵绊，<br>即是活在当下。<br>人生需要规划和目标，<br>然后在每一个当下努力，<br>而不执着于未来的果相。</p>
]]></content>
  </entry>
  <entry>
    <title>小程序/3.0 小程序的架构和配置</title>
    <url>/2020/02/17/%E5%B0%8F%E7%A8%8B%E5%BA%8F/3.0%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9E%B6%E6%9E%84%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="1-配置"><a href="#1-配置" class="headerlink" title="1.配置"></a>1.配置</h1><h2 id="1-1-全局配置"><a href="#1-1-全局配置" class="headerlink" title="1.1.全局配置"></a>1.1.全局配置</h2><p>重要的几个配置</p>
<h3 id="1-1-1-pages页面路径列表"><a href="#1-1-1-pages页面路径列表" class="headerlink" title="1.1.1 pages页面路径列表"></a>1.1.1 pages页面路径列表</h3><p>用于指定小程序由哪些页面组成，每一项都对应一个页面的路径信息<br>小程序中所有的页面都是必须在pages中进行注册</p>
<h3 id="1-1-2-window全局的默认窗口展示"><a href="#1-1-2-window全局的默认窗口展示" class="headerlink" title="1.1.2 window全局的默认窗口展示"></a>1.1.2 window全局的默认窗口展示</h3><p>用户指定窗口如何展示</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"window": &#123;</span><br><span class="line">    <span class="comment">// 顶部导航栏的背景色</span></span><br><span class="line">    "navigationBarBackgroundColor": "#ff6979",</span><br><span class="line">    "navigationBarTextStyle": "white",</span><br><span class="line">    "navigationBarTitleText": "购物街",</span><br><span class="line">    <span class="comment">// 下拉页面时，页面背后显示的背景色</span></span><br><span class="line">    "backgroundColor": "#eeeeee",</span><br><span class="line">    "backgroundTextStyle": "light",</span><br><span class="line">    "enablePullDownRefresh": true</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="1-1-3-tabBar-底部栏的展示"><a href="#1-1-3-tabBar-底部栏的展示" class="headerlink" title="1.1.3 tabBar 底部栏的展示"></a>1.1.3 tabBar 底部栏的展示</h3><p>配置好就可以使用底部栏了</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"> "tabBar": &#123;</span><br><span class="line">    "selectedColor": "#ff6979",</span><br><span class="line">    "list": [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"pagePath"</span>: <span class="string">"pages/home/home"</span>,</span><br><span class="line">        <span class="attr">"text"</span>: <span class="string">"首页"</span>,</span><br><span class="line">        <span class="attr">"iconPath"</span>: <span class="string">"assets/tabbar/home.png"</span>,</span><br><span class="line">        <span class="attr">"selectedIconPath"</span>: <span class="string">"assets/tabbar/home_active.png"</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">//  list中至少有两个对象</span></span><br></pre></td></tr></table></figure>
<h2 id="1-2-局部配置"><a href="#1-2-局部配置" class="headerlink" title="1.2.局部配置"></a>1.2.局部配置</h2><p>也叫页面配置，在对应页面的json文件中进行相应的配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"usingComponents"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"navigationBarBackgroundColor"</span>: <span class="string">"#dd6666"</span>,</span><br><span class="line">  <span class="attr">"navigationBarTitleText"</span>: <span class="string">"分类"</span>,</span><br><span class="line">  <span class="attr">"enablePullDownRefresh"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="2-架构-小程序双线程模型"><a href="#2-架构-小程序双线程模型" class="headerlink" title="2.架构-小程序双线程模型"></a>2.架构-小程序双线程模型</h1>]]></content>
  </entry>
  <entry>
    <title>小程序/2.0 小程序初体验</title>
    <url>/2020/02/17/%E5%B0%8F%E7%A8%8B%E5%BA%8F/2.0%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="1-数据绑定"><a href="#1-数据绑定" class="headerlink" title="1.数据绑定"></a>1.数据绑定</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--pages/home/home.wxml--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1.小程序的数据绑定：&#123;&#123;变量名&#125;&#125; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>Hello &#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    name:<span class="string">'lily'</span>,</span><br><span class="line">    age:<span class="string">'18'</span>,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="2-列表渲染"><a href="#2-列表渲染" class="headerlink" title="2.列表渲染"></a>2.列表渲染</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 2.列表展示wx:for --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;students&#125;&#125;"</span>&gt;</span>&#123;&#123;item.name&#125;&#125;--&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">students:</span><br><span class="line">    [</span><br><span class="line">      &#123; <span class="attr">id</span>:<span class="number">1</span>, <span class="attr">name</span>: <span class="string">'zhangsan'</span>&#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>:<span class="number">2</span>, <span class="attr">name</span>: <span class="string">'lisi'</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>:<span class="number">3</span>, <span class="attr">name</span>: <span class="string">'wangwu'</span> &#125;,</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure>
<h1 id="3-事件监听，按钮实现计数功能"><a href="#3-事件监听，按钮实现计数功能" class="headerlink" title="3.事件监听，按钮实现计数功能"></a>3.事件监听，按钮实现计数功能</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 3.事件监听改变data --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>当前计数:&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">"sub"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    name:<span class="string">'lily'</span>,</span><br><span class="line">    age:<span class="string">'18'</span>,</span><br><span class="line">    counter:<span class="number">0</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  add() &#123;</span><br><span class="line">    <span class="comment">// this.data.counter+=1 vue中的写法，</span></span><br><span class="line">    <span class="comment">// 可以使页面的数据动态改变，但是wx不能这样写</span></span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      counter:<span class="keyword">this</span>.data.counter + <span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  sub() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      counter: <span class="keyword">this</span>.data.counter <span class="number">-1</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>小程序/1.0 从零搭建小程序</title>
    <url>/2020/02/17/%E5%B0%8F%E7%A8%8B%E5%BA%8F/1.0%20%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="从零搭建小程序（HelloWorld页面"><a href="#从零搭建小程序（HelloWorld页面" class="headerlink" title="从零搭建小程序（HelloWorld页面)"></a>从零搭建小程序（HelloWorld页面)</h1><h2 id="0-准备工作"><a href="#0-准备工作" class="headerlink" title="0.准备工作"></a>0.准备工作</h2><p>1.用的语言和框架<br>页面布局wxml<br>页面样式wxcc<br>页面脚本js+wxs<br>mvvm架构<br>2.申请appid<br>3.下载开发工具</p>
<a id="more"></a>
<h2 id="1-删除自动生成的文件只留下"><a href="#1-删除自动生成的文件只留下" class="headerlink" title="1.删除自动生成的文件只留下"></a>1.删除自动生成的文件只留下</h2><p>project.config.json(项目配置文件)，sitemap.json(微信检索)</p>
<h2 id="2-应用程序结构"><a href="#2-应用程序结构" class="headerlink" title="2.应用程序结构"></a>2.应用程序结构</h2><p>最上层APP-&gt;多个Page-&gt;多个组件<br>App包括：app.js,app.json,app.wxss<br>Page包括:page.js,page.json,page.wxml,page.wxss<br>Component包括:component.js,component.json,component.wxml,component.wxss</p>
<h2 id="3-搭建小程序"><a href="#3-搭建小程序" class="headerlink" title="3.搭建小程序"></a>3.搭建小程序</h2><ul>
<li><p>1.根据报错信息，我们需要在app.json中添加内容-&gt;<br>添加pages属性，值为数组-&gt;<br>数组中需要包含至少一项</p>
</li>
<li><p>2.添加一个完整的page<br>新建home.js,home.json,home.wxml,home.wxss<br>可以直接新建page会自动生成这四个文件，而且会自动注册<br>或者在app.json中注册一个页面，页面文件会自动生成</p>
</li>
<li><p>3.在app.json注册home页面</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"pages":[</span><br><span class="line">   <span class="string">"home"</span><span class="comment">//页面所在路径</span></span><br><span class="line"> ]</span><br></pre></td></tr></table></figure></li>
<li><p>4.在home.js中创建Page对象</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>5.整理目录结构<br>新建pages<br>pages内包含home文件夹，about文件夹，文hexo件夹内部再新建page<br>页面显示的内容来自wxml文件，样式通过wxss来修改<br>pages&gt;home(四个文件),about(四个文件)</p>
</li>
</ul>
]]></content>
  </entry>
</search>
